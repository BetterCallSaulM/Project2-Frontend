{"ast":null,"code":"var _jsxFileName = \"/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Movie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/Layout';\nimport { Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  movie\n}) => {\n  _s();\n  const navigate = useNavigate(); // Hook to programmatically navigate\n\n  const handleViewDetails = () => {\n    // Navigate to the movie details page (assuming you have a route for movie details)\n    navigate(`/movie-details/${movie.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '18rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: movie.posterUrl,\n      alt: `${movie.title} poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: movie.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \" \", movie.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleViewDetails,\n        children: \"View Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useEffect","useNavigate","Layout","Card","Button","jsxDEV","_jsxDEV","MovieCard","movie","_s","navigate","handleViewDetails","id","style","width","children","Img","variant","src","posterUrl","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","description","genre","onClick","_c","$RefreshReg$"],"sources":["/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Movie.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/Layout'; \nimport { Card, Button } from 'react-bootstrap';\n\nconst MovieCard = ({ movie }) => {\n  const navigate = useNavigate(); // Hook to programmatically navigate\n\n  const handleViewDetails = () => {\n    // Navigate to the movie details page (assuming you have a route for movie details)\n    navigate(`/movie-details/${movie.id}`);\n  };\n\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src={movie.posterUrl} alt={`${movie.title} poster`} />\n      <Card.Body>\n        <Card.Title>{movie.title}</Card.Title>\n        <Card.Text>\n          {movie.description}\n        </Card.Text>\n        <Card.Text>\n          <strong>Genre:</strong> {movie.genre}\n        </Card.Text>\n        <Button variant=\"primary\" onClick={handleViewDetails}>View Details</Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MovieCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAD,QAAQ,CAAC,kBAAkBF,KAAK,CAACI,EAAE,EAAE,CAAC;EACxC,CAAC;EAED,oBACEN,OAAA,CAACH,IAAI;IAACU,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC9BT,OAAA,CAACH,IAAI,CAACa,GAAG;MAACC,OAAO,EAAC,KAAK;MAACC,GAAG,EAAEV,KAAK,CAACW,SAAU;MAACC,GAAG,EAAE,GAAGZ,KAAK,CAACa,KAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EnB,OAAA,CAACH,IAAI,CAACuB,IAAI;MAAAX,QAAA,gBACRT,OAAA,CAACH,IAAI,CAACwB,KAAK;QAAAZ,QAAA,EAAEP,KAAK,CAACa;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACtCnB,OAAA,CAACH,IAAI,CAACyB,IAAI;QAAAb,QAAA,EACPP,KAAK,CAACqB;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACZnB,OAAA,CAACH,IAAI,CAACyB,IAAI;QAAAb,QAAA,gBACRT,OAAA;UAAAS,QAAA,EAAQ;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACjB,KAAK,CAACsB,KAAK;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACZnB,OAAA,CAACF,MAAM;QAACa,OAAO,EAAC,SAAS;QAACc,OAAO,EAAEpB,iBAAkB;QAAAI,QAAA,EAAC;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAAChB,EAAA,CAvBIF,SAAS;EAAA,QACIN,WAAW;AAAA;AAAA+B,EAAA,GADxBzB,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}