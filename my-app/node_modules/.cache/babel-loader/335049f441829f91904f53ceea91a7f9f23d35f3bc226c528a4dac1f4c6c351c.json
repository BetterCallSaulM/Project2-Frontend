{"ast":null,"code":"var _jsxFileName = \"/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Layout from '../components/Layout'; // Ensure you have a Layout component or remove if unnecessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const {\n    id\n  } = useParams(); // Optional dynamic id from URL, if provided\n  const [searchTerm, setSearchTerm] = useState(''); // Store search input\n  const [genre, setGenre] = useState(''); // Store selected genre\n\n  const handleSearch = e => {\n    e.preventDefault();\n    console.log(\"Searching for movie:\", searchTerm);\n    console.log(\"Selected genre:\", genre);\n    if (id) {\n      console.log(\"Dynamic ID:\", id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value) // Update search term as user types\n        ,\n        placeholder: \"Enter movie name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: genre,\n        onChange: e => setGenre(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"action\",\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"comedy\",\n          children: \"Comedy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"drama\",\n          children: \"Drama\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"horror\",\n          children: \"Horror\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sci-fi\",\n          children: \"Sci-Fi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"FBCzogHhl96s8WufdmYeRxk6ShI=\", false, function () {\n  return [useParams];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useParams","Layout","jsxDEV","_jsxDEV","Search","_s","id","searchTerm","setSearchTerm","genre","setGenre","handleSearch","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Layout from '../components/Layout'; // Ensure you have a Layout component or remove if unnecessary\n\nfunction Search() {\n  const { id } = useParams(); // Optional dynamic id from URL, if provided\n  const [searchTerm, setSearchTerm] = useState(''); // Store search input\n  const [genre, setGenre] = useState(''); // Store selected genre\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    console.log(\"Searching for movie:\", searchTerm);\n    console.log(\"Selected genre:\", genre);\n    if (id) {\n      console.log(\"Dynamic ID:\", id);\n    }\n  };\n\n  return (\n    <Layout>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch}>\n        {/* Movie name input */}\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)} // Update search term as user types\n          placeholder=\"Enter movie name...\"\n        />\n        \n        {/* Genre selection */}\n        <select value={genre} onChange={(e) => setGenre(e.target.value)}>\n          <option value=\"\">Select genre</option>\n          <option value=\"action\">Action</option>\n          <option value=\"comedy\">Comedy</option>\n          <option value=\"drama\">Drama</option>\n          <option value=\"horror\">Horror</option>\n          <option value=\"sci-fi\">Sci-Fi</option>\n        </select>\n\n        <button type=\"submit\">Search</button>\n      </form>\n    </Layout>\n  );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}