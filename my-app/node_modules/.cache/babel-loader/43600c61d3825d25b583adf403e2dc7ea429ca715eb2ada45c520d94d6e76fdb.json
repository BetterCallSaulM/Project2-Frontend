{"ast":null,"code":"var _jsxFileName = \"/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movies, setMovies] = useState([{\n    id: 1,\n    title: \"The Matrix\",\n    genre: \"Sci-Fi\",\n    director: \"The Wachowskis\",\n    year: 1999,\n    poster: \"https://matrix.fandom.com/wiki/The_Matrix?file=The_Matrix_digital_release_cover.jpg\"\n  }, {\n    id: 2,\n    title: \"Inception\",\n    genre: \"Sci-Fi\",\n    director: \"Christopher Nolan\",\n    year: 2010,\n    poster: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRRqhsSA3e6Kw-EAbjneujrnhXKq7Ugl5L5Wh0yyLC92qimzfJw\"\n  }, {\n    id: 3,\n    title: \"The Dark Knight\",\n    genre: \"Action\",\n    director: \"Christopher Nolan\",\n    year: 2008,\n    poster: \"https://image.tmdb.org/t/p/w500/qJ2tW6WMUDux911r6m7haRef0WH.jpg\"\n  }, {\n    id: 4,\n    title: \"Pulp Fiction\",\n    genre: \"Crime\",\n    director: \"Quentin Tarantino\",\n    year: 1994,\n    poster: \"https://image.tmdb.org/t/p/w500/dM2w364MScsjFf8pfMbaWUcWrR.jpg\"\n  }, {\n    id: 5,\n    title: \"Interstellar\",\n    genre: \"Sci-Fi\",\n    director: \"Christopher Nolan\",\n    year: 2014,\n    poster: \"https://image.tmdb.org/t/p/w500/rAiYTfKGqDCRIIqoNMq8NpZaCk9.jpg\"\n  }]);\n  const [filteredMovies, setFilteredMovies] = useState(movies);\n  const [selectedGenre, setSelectedGenre] = useState(''); // Store selected genre\n  const navigate = useNavigate();\n  const genres = [...new Set(movies.map(movie => movie.genre))]; // Get unique genres\n\n  // Filter movies by search term\n  const handleSearch = e => {\n    e.preventDefault();\n    const results = movies.filter(movie => movie.title.toLowerCase().includes(searchTerm.toLowerCase()) || movie.director.toLowerCase().includes(searchTerm.toLowerCase()) || movie.year.toString().includes(searchTerm));\n    setFilteredMovies(results);\n  };\n\n  // Filter movies by genre\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n    const results = movies.filter(movie => movie.genre === genre);\n    setFilteredMovies(results);\n  };\n  const redirectToMovieInfo = id => {\n    navigate(`/movie/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGenreClick(genre),\n        style: {\n          marginRight: '10px',\n          padding: '10px',\n          cursor: 'pointer',\n          backgroundColor: genre === selectedGenre ? 'lightblue' : 'white'\n        },\n        children: genre\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Search by title, director, or year...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredMovies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => redirectToMovieInfo(movie.id),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Director: \", movie.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year: \", movie.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genre: \", movie.genre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster,\n            alt: movie.title,\n            style: {\n              width: '150px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"1lSKYcB56Yc728tSDTmnZ0txcZE=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useNavigate","Layout","jsxDEV","_jsxDEV","Search","_s","searchTerm","setSearchTerm","movies","setMovies","id","title","genre","director","year","poster","filteredMovies","setFilteredMovies","selectedGenre","setSelectedGenre","navigate","genres","Set","map","movie","handleSearch","e","preventDefault","results","filter","toLowerCase","includes","toString","handleGenreClick","redirectToMovieInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","index","onClick","marginRight","padding","cursor","backgroundColor","onSubmit","type","value","onChange","target","placeholder","length","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/Layout';\n\nfunction Search() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movies, setMovies] = useState([\n    {\n      id: 1,\n      title: \"The Matrix\",\n      genre: \"Sci-Fi\",\n      director: \"The Wachowskis\",\n      year: 1999,\n      poster: \"https://matrix.fandom.com/wiki/The_Matrix?file=The_Matrix_digital_release_cover.jpg\"\n    },\n    {\n      id: 2,\n      title: \"Inception\",\n      genre: \"Sci-Fi\",\n      director: \"Christopher Nolan\",\n      year: 2010,\n      poster: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRRqhsSA3e6Kw-EAbjneujrnhXKq7Ugl5L5Wh0yyLC92qimzfJw\"\n    },\n    {\n      id: 3,\n      title: \"The Dark Knight\",\n      genre: \"Action\",\n      director: \"Christopher Nolan\",\n      year: 2008,\n      poster: \"https://image.tmdb.org/t/p/w500/qJ2tW6WMUDux911r6m7haRef0WH.jpg\"\n    },\n    {\n      id: 4,\n      title: \"Pulp Fiction\",\n      genre: \"Crime\",\n      director: \"Quentin Tarantino\",\n      year: 1994,\n      poster: \"https://image.tmdb.org/t/p/w500/dM2w364MScsjFf8pfMbaWUcWrR.jpg\"\n    },\n    {\n      id: 5,\n      title: \"Interstellar\",\n      genre: \"Sci-Fi\",\n      director: \"Christopher Nolan\",\n      year: 2014,\n      poster: \"https://image.tmdb.org/t/p/w500/rAiYTfKGqDCRIIqoNMq8NpZaCk9.jpg\"\n    }\n  ]);\n\n  const [filteredMovies, setFilteredMovies] = useState(movies);\n  const [selectedGenre, setSelectedGenre] = useState(''); // Store selected genre\n  const navigate = useNavigate();\n\n  const genres = [...new Set(movies.map(movie => movie.genre))]; // Get unique genres\n\n  // Filter movies by search term\n  const handleSearch = (e) => {\n    e.preventDefault();\n    const results = movies.filter(movie =>\n      movie.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      movie.director.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      movie.year.toString().includes(searchTerm)\n    );\n    setFilteredMovies(results);\n  };\n\n  // Filter movies by genre\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n    const results = movies.filter(movie => movie.genre === genre);\n    setFilteredMovies(results);\n  };\n\n  const redirectToMovieInfo = (id) => {\n    navigate(`/movie/${id}`);\n  };\n\n  return (\n    <Layout>\n      <h1>Search Movies</h1>\n      \n      {/* Genre Buttons */}\n      <div style={{ marginBottom: '20px' }}>\n        {genres.map((genre, index) => (\n          <button \n            key={index} \n            onClick={() => handleGenreClick(genre)} \n            style={{ marginRight: '10px', padding: '10px', cursor: 'pointer', backgroundColor: genre === selectedGenre ? 'lightblue' : 'white' }}\n          >\n            {genre}\n          </button>\n        ))}\n      </div>\n\n      {/* Search Form */}\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          placeholder=\"Search by title, director, or year...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {/* Movie List */}\n      <div>\n        {filteredMovies.length > 0 ? (\n          <ul>\n            {filteredMovies.map(movie => (\n              <li key={movie.id} onClick={() => redirectToMovieInfo(movie.id)} style={{ cursor: 'pointer' }}>\n                <h3>{movie.title}</h3>\n                <p>Director: {movie.director}</p>\n                <p>Year: {movie.year}</p>\n                <p>Genre: {movie.genre}</p>\n                <img src={movie.poster} alt={movie.title} style={{ width: '150px' }} />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No movies found.</p>\n        )}\n      </div>\n    </Layout>\n  );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}