{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amanc\\\\Project 2\\\\Front\\\\Project2-Frontend\\\\my-app\\\\src\\\\pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [name, setName] = useState(''); // State for name\n  const [email, setEmail] = useState(''); // State for email\n  const [password, setPassword] = useState(''); // State for password\n\n  const handleSignUp = async () => {\n    const response = await fetch('http://localhost:8081/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        // Assuming you have these values in your component's state\n        email: email,\n        password: userPassword\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      console.log('User registered successfully:', data);\n      // Redirect or update the UI as needed\n    } else {\n      console.error('Error during registration:', data.message);\n    }\n  };\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   const userData = { name, email, password };\n\n  //   // You can send userData to your backend here using fetch or axios\n  //   try {\n  //     const response = await fetch('http://localhost:3001/api/signup', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(userData),\n  //     });\n\n  //     const data = await response.json();\n  //     // Handle response (e.g., success message, redirect, etc.)\n  //     console.log(data);\n  //   } catch (error) {\n  //     console.error('Error:', error);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true // Optional: Makes the field mandatory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true // Optional: Makes the field mandatory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true // Optional: Makes the field mandatory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"y7AVIb+2dT29WONRxO7d74XBSmc=\");\n_c = SignUp;\nexport default SignUp;\n\n// import React, { useState } from 'react';\n// import Layout from '../components/Layout'; \n// import { useState } from 'react';\n// function SignUp() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleSignUp = (e) => {\n//     e.preventDefault();\n//     // Handle sign-up logic here\n//     console.log(\"Username:\", username, \"Password:\", password);\n//   };\n\n//   function Signup() {\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleSubmit = async (e) => {\n//       e.preventDefault();\n\n//       const response = await fetch('http://localhost:3001/signup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ name, email, password }),\n//       });\n\n//       const data = await response.json();\n//       alert(data.message);\n//     };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//         placeholder=\"Name\"\n//         required\n//       />\n//       <input\n//         type=\"email\"\n//         value={email}\n//         onChange={(e) => setEmail(e.target.value)}\n//         placeholder=\"Email\"\n//         required\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//         required\n//       />\n//       <button type=\"submit\">Sign Up</button>\n//     </form>\n// <Layout>\n//   <h1>Create Account</h1>\n//   <form onSubmit={handleSignUp}>\n//     <div>\n//       <label>Username</label>\n//       <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} required />\n//     </div>\n//     <div>\n//       <label>Password</label>\n//       <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//     </div>\n//     <button type=\"submit\">Sign Up</button>\n//   </form>\n// </Layout>\n//   );\n// }\n\n// export default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Layout","jsxDEV","_jsxDEV","SignUp","_s","name","setName","email","setEmail","password","setPassword","handleSignUp","response","fetch","method","headers","body","JSON","stringify","userPassword","data","json","ok","console","log","error","message","children","onSubmit","handleSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/amanc/Project 2/Front/Project2-Frontend/my-app/src/pages/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Layout from '../components/Layout'; \r\n\r\nfunction SignUp() {\r\n  const [name, setName] = useState('');      // State for name\r\n  const [email, setEmail] = useState('');    // State for email\r\n  const [password, setPassword] = useState(''); // State for password\r\n\r\n  const handleSignUp = async () => {\r\n    const response = await fetch('http://localhost:8081/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,  // Assuming you have these values in your component's state\r\n            email: email,\r\n            password: userPassword,\r\n        }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n        console.log('User registered successfully:', data);\r\n        // Redirect or update the UI as needed\r\n    } else {\r\n        console.error('Error during registration:', data.message);\r\n    }\r\n};\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n    \r\n  //   const userData = { name, email, password };\r\n    \r\n  //   // You can send userData to your backend here using fetch or axios\r\n  //   try {\r\n  //     const response = await fetch('http://localhost:3001/api/signup', {\r\n  //       method: 'POST',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       },\r\n  //       body: JSON.stringify(userData),\r\n  //     });\r\n\r\n  //     const data = await response.json();\r\n  //     // Handle response (e.g., success message, redirect, etc.)\r\n  //     console.log(data);\r\n  //   } catch (error) {\r\n  //     console.error('Error:', error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Layout>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required // Optional: Makes the field mandatory\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required // Optional: Makes the field mandatory\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required // Optional: Makes the field mandatory\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n\r\n// import React, { useState } from 'react';\r\n// import Layout from '../components/Layout'; \r\n// import { useState } from 'react';\r\n// function SignUp() {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n\r\n//   const handleSignUp = (e) => {\r\n//     e.preventDefault();\r\n//     // Handle sign-up logic here\r\n//     console.log(\"Username:\", username, \"Password:\", password);\r\n//   };\r\n\r\n//   function Signup() {\r\n//     const [name, setName] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n  \r\n//     const handleSubmit = async (e) => {\r\n//       e.preventDefault();\r\n  \r\n//       const response = await fetch('http://localhost:3001/signup', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ name, email, password }),\r\n//       });\r\n  \r\n//       const data = await response.json();\r\n//       alert(data.message);\r\n//     };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <input\r\n//         type=\"text\"\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//         placeholder=\"Name\"\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"email\"\r\n//         value={email}\r\n//         onChange={(e) => setEmail(e.target.value)}\r\n//         placeholder=\"Email\"\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"password\"\r\n//         value={password}\r\n//         onChange={(e) => setPassword(e.target.value)}\r\n//         placeholder=\"Password\"\r\n//         required\r\n//       />\r\n//       <button type=\"submit\">Sign Up</button>\r\n//     </form>\r\n    // <Layout>\r\n    //   <h1>Create Account</h1>\r\n    //   <form onSubmit={handleSignUp}>\r\n    //     <div>\r\n    //       <label>Username</label>\r\n    //       <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n    //     </div>\r\n    //     <div>\r\n    //       <label>Password</label>\r\n    //       <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n    //     </div>\r\n    //     <button type=\"submit\">Sign Up</button>\r\n    //   </form>\r\n    // </Layout>\r\n//   );\r\n// }\r\n\r\n// export default SignUp;\r\n"],"mappings":"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AC,QAAQ;QAAAR,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb;AAAC9B,EAAA,CAvFQD,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAyFf,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;;AAEA;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}