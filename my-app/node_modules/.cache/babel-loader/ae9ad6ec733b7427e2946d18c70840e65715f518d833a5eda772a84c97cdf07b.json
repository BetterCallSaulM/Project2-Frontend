{"ast":null,"code":"var _jsxFileName = \"/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movies, setMovies] = useState([]); // Store movies fetched from the API\n  const [filteredMovies, setFilteredMovies] = useState([]); // Store filtered results\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch movies from the API and store them in 'movies' state\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('http://group16-project2-07b42fe3d45e.herokuapp.com/Movies/');\n        const data = await response.json();\n\n        // Reformat fetched data to match your current structure\n        const formattedMovies = data.map(movie => ({\n          id: movie.movie_id,\n          title: movie.title,\n          genre: movie.genre,\n          director: movie.director,\n          year: movie.year,\n          poster: movie.poster\n        }));\n        setMovies(formattedMovies);\n        setFilteredMovies(formattedMovies); // Initially, filteredMovies will be all movies\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  // Update document title based on search or genre selection\n  useEffect(() => {\n    if (selectedGenre) {\n      document.title = `${selectedGenre} movies`;\n    } else if (searchTerm) {\n      document.title = `Search results for \"${searchTerm}\"`;\n    } else {\n      document.title = 'Search Movies';\n    }\n  }, [selectedGenre, searchTerm]);\n\n  // Handle search input and filter movies\n  const handleSearch = e => {\n    e.preventDefault();\n    setSelectedGenre('');\n    const results = movies.filter(movie => movie.title.toLowerCase().includes(searchTerm.toLowerCase()) || movie.director.toLowerCase().includes(searchTerm.toLowerCase()) || movie.year.toString().includes(searchTerm));\n    setFilteredMovies(results); // Update filteredMovies based on search\n  };\n\n  // Handle genre filtering\n  const handleGenreClick = genre => {\n    setSearchTerm('');\n    setSelectedGenre(genre);\n    const results = movies.filter(movie => movie.genre === genre);\n    setFilteredMovies(results); // Update filteredMovies based on genre\n  };\n\n  // Navigate to movie details\n  const redirectToMovieInfo = id => {\n    navigate(`/movie/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4 text-warning\",\n      children: selectedGenre ? `${selectedGenre} movies` : searchTerm ? `Search results for \"${searchTerm}\"` : 'Search Movies'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"d-flex justify-content-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Search by title, director, or year...\",\n        className: \"form-control me-2\",\n        style: {\n          maxWidth: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-warning\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: filteredMovies.length > 0 ? filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6 col-md-4 col-lg-3 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-dark text-white\",\n          style: {\n            maxWidth: '180px',\n            margin: '0 auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster,\n            alt: movie.title,\n            className: \"card-img-top\",\n            style: {\n              height: '250px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Director:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 51\n                }, this), \" \", movie.director]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Year:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 51\n                }, this), \" \", movie.year]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleGenreClick(movie.genre),\n              className: \"btn btn-outline-warning btn-sm mb-2\",\n              children: movie.genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => redirectToMovieInfo(movie.id),\n              className: \"btn btn-warning btn-sm\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-white\",\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"sDJFY9imT/t1N9KtN6X3GwfJi5s=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Search","_s","searchTerm","setSearchTerm","movies","setMovies","filteredMovies","setFilteredMovies","selectedGenre","setSelectedGenre","navigate","fetchMovies","response","fetch","data","json","formattedMovies","map","movie","id","movie_id","title","genre","director","year","poster","error","console","document","handleSearch","e","preventDefault","results","filter","toLowerCase","includes","toString","handleGenreClick","redirectToMovieInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","style","maxWidth","length","margin","src","alt","height","objectFit","onClick","_c","$RefreshReg$"],"sources":["/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap\n\nfunction Search() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movies, setMovies] = useState([]); // Store movies fetched from the API\n  const [filteredMovies, setFilteredMovies] = useState([]); // Store filtered results\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch movies from the API and store them in 'movies' state\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('http://group16-project2-07b42fe3d45e.herokuapp.com/Movies/');\n        const data = await response.json();\n\n        // Reformat fetched data to match your current structure\n        const formattedMovies = data.map((movie) => ({\n          id: movie.movie_id,\n          title: movie.title,\n          genre: movie.genre,\n          director: movie.director,\n          year: movie.year,\n          poster: movie.poster\n        }));\n\n        setMovies(formattedMovies);\n        setFilteredMovies(formattedMovies); // Initially, filteredMovies will be all movies\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  // Update document title based on search or genre selection\n  useEffect(() => {\n    if (selectedGenre) {\n      document.title = `${selectedGenre} movies`;\n    } else if (searchTerm) {\n      document.title = `Search results for \"${searchTerm}\"`;\n    } else {\n      document.title = 'Search Movies';\n    }\n  }, [selectedGenre, searchTerm]);\n\n  // Handle search input and filter movies\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setSelectedGenre('');\n    const results = movies.filter(movie =>\n      movie.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      movie.director.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      movie.year.toString().includes(searchTerm)\n    );\n    setFilteredMovies(results); // Update filteredMovies based on search\n  };\n\n  // Handle genre filtering\n  const handleGenreClick = (genre) => {\n    setSearchTerm('');\n    setSelectedGenre(genre);\n    const results = movies.filter(movie => movie.genre === genre);\n    setFilteredMovies(results); // Update filteredMovies based on genre\n  };\n\n  // Navigate to movie details\n  const redirectToMovieInfo = (id) => {\n    navigate(`/movie/${id}`);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center mb-4 text-warning\">\n        {selectedGenre ? `${selectedGenre} movies` : searchTerm ? `Search results for \"${searchTerm}\"` : 'Search Movies'}\n      </h1>\n\n      {/* Search Form */}\n      <form onSubmit={handleSearch} className=\"d-flex justify-content-center mb-4\">\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          placeholder=\"Search by title, director, or year...\"\n          className=\"form-control me-2\"\n          style={{ maxWidth: '300px' }}\n        />\n        <button type=\"submit\" className=\"btn btn-warning\">Search</button>\n      </form>\n\n      {/* Movie Cards */}\n      <div className=\"row\">\n        {filteredMovies.length > 0 ? (\n          filteredMovies.map(movie => (\n            <div key={movie.id} className=\"col-sm-6 col-md-4 col-lg-3 mb-4\">\n              <div className=\"card bg-dark text-white\" style={{ maxWidth: '180px', margin: '0 auto' }}>\n                <img src={movie.poster} alt={movie.title} className=\"card-img-top\" style={{ height: '250px', objectFit: 'cover' }} />\n                <div className=\"card-body\">\n                  <h6 className=\"card-title\">{movie.title}</h6>\n                  <p className=\"card-text\"><small><strong>Director:</strong> {movie.director}</small></p>\n                  <p className=\"card-text\"><small><strong>Year:</strong> {movie.year}</small></p>\n                  <button\n                    onClick={() => handleGenreClick(movie.genre)}\n                    className=\"btn btn-outline-warning btn-sm mb-2\"\n                  >\n                    {movie.genre}\n                  </button>\n                  <button\n                    onClick={() => redirectToMovieInfo(movie.id)}\n                    className=\"btn btn-warning btn-sm\"\n                  >\n                    View Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"text-center text-white\">No movies found.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}