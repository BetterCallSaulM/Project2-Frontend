{"ast":null,"code":"var _jsxFileName = \"/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movies, setMovies] = useState([{\n    id: 1,\n    title: \"The Matrix\",\n    genre: \"Sci-Fi\",\n    director: \"The Wachowskis\",\n    year: 1999,\n    poster: \"https://matrix.fandom.com/wiki/The_Matrix?file=The_Matrix_digital_release_cover.jpg\"\n  }, {\n    id: 2,\n    title: \"Inception\",\n    genre: \"Sci-Fi\",\n    director: \"Christopher Nolan\",\n    year: 2010,\n    poster: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRRqhsSA3e6Kw-EAbjneujrnhXKq7Ugl5L5Wh0yyLC92qimzfJw\"\n  }, {\n    id: 3,\n    title: \"The Dark Knight\",\n    genre: \"Action\",\n    director: \"Christopher Nolan\",\n    year: 2008,\n    poster: \"https://image.tmdb.org/t/p/w500/qJ2tW6WMUDux911r6m7haRef0WH.jpg\"\n  }, {\n    id: 4,\n    title: \"Pulp Fiction\",\n    genre: \"Crime\",\n    director: \"Quentin Tarantino\",\n    year: 1994,\n    poster: \"https://image.tmdb.org/t/p/w500/dM2w364MScsjFf8pfMbaWUcWrR.jpg\"\n  }, {\n    id: 5,\n    title: \"Interstellar\",\n    genre: \"Sci-Fi\",\n    director: \"Christopher Nolan\",\n    year: 2014,\n    poster: \"https://image.tmdb.org/t/p/w500/rAiYTfKGqDCRIIqoNMq8NpZaCk9.jpg\"\n  }]);\n  const [filteredMovies, setFilteredMovies] = useState(movies);\n  const [selectedGenre, setSelectedGenre] = useState(''); // Store selected genre\n  const [displayedGenres, setDisplayedGenres] = useState({}); // Track which genres are showing \"genre movies\"\n  const navigate = useNavigate();\n\n  // Filter movies by search term\n  const handleSearch = e => {\n    e.preventDefault();\n    const results = movies.filter(movie => movie.title.toLowerCase().includes(searchTerm.toLowerCase()) || movie.director.toLowerCase().includes(searchTerm.toLowerCase()) || movie.year.toString().includes(searchTerm));\n    setFilteredMovies(results);\n  };\n\n  // Filter movies by genre (from the movie card buttons) and append \"movies\" to the genre\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n    setDisplayedGenres(prev => ({\n      ...prev,\n      [genre]: true\n    }));\n    const results = movies.filter(movie => movie.genre === genre);\n    setFilteredMovies(results);\n  };\n  const redirectToMovieInfo = id => {\n    navigate(`/movie/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Search by title, director, or year...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredMovies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Director: \", movie.director]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year: \", movie.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleGenreClick(movie.genre),\n              style: {\n                padding: '10px',\n                cursor: 'pointer',\n                backgroundColor: movie.genre === selectedGenre ? 'lightblue' : 'white'\n              },\n              children: displayedGenres[movie.genre] ? `${movie.genre} movies` : movie.genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster,\n            alt: movie.title,\n            style: {\n              width: '150px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"rDIr9Be188EmyBmcgXBIBoUf46k=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useNavigate","Layout","jsxDEV","_jsxDEV","Search","_s","searchTerm","setSearchTerm","movies","setMovies","id","title","genre","director","year","poster","filteredMovies","setFilteredMovies","selectedGenre","setSelectedGenre","displayedGenres","setDisplayedGenres","navigate","handleSearch","e","preventDefault","results","filter","movie","toLowerCase","includes","toString","handleGenreClick","prev","redirectToMovieInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","length","map","style","cursor","onClick","padding","backgroundColor","src","alt","width","marginTop","_c","$RefreshReg$"],"sources":["/Users/luisruiz/Project2-Master/Project2-Frontend/my-app/src/pages/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/Layout';\n\nfunction Search() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movies, setMovies] = useState([\n    {\n      id: 1,\n      title: \"The Matrix\",\n      genre: \"Sci-Fi\",\n      director: \"The Wachowskis\",\n      year: 1999,\n      poster: \"https://matrix.fandom.com/wiki/The_Matrix?file=The_Matrix_digital_release_cover.jpg\"\n    },\n    {\n      id: 2,\n      title: \"Inception\",\n      genre: \"Sci-Fi\",\n      director: \"Christopher Nolan\",\n      year: 2010,\n      poster: \"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRRqhsSA3e6Kw-EAbjneujrnhXKq7Ugl5L5Wh0yyLC92qimzfJw\"\n    },\n    {\n      id: 3,\n      title: \"The Dark Knight\",\n      genre: \"Action\",\n      director: \"Christopher Nolan\",\n      year: 2008,\n      poster: \"https://image.tmdb.org/t/p/w500/qJ2tW6WMUDux911r6m7haRef0WH.jpg\"\n    },\n    {\n      id: 4,\n      title: \"Pulp Fiction\",\n      genre: \"Crime\",\n      director: \"Quentin Tarantino\",\n      year: 1994,\n      poster: \"https://image.tmdb.org/t/p/w500/dM2w364MScsjFf8pfMbaWUcWrR.jpg\"\n    },\n    {\n      id: 5,\n      title: \"Interstellar\",\n      genre: \"Sci-Fi\",\n      director: \"Christopher Nolan\",\n      year: 2014,\n      poster: \"https://image.tmdb.org/t/p/w500/rAiYTfKGqDCRIIqoNMq8NpZaCk9.jpg\"\n    }\n  ]);\n\n  const [filteredMovies, setFilteredMovies] = useState(movies);\n  const [selectedGenre, setSelectedGenre] = useState(''); // Store selected genre\n  const [displayedGenres, setDisplayedGenres] = useState({}); // Track which genres are showing \"genre movies\"\n  const navigate = useNavigate();\n\n  // Filter movies by search term\n  const handleSearch = (e) => {\n    e.preventDefault();\n    const results = movies.filter(movie =>\n      movie.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      movie.director.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      movie.year.toString().includes(searchTerm)\n    );\n    setFilteredMovies(results);\n  };\n\n  // Filter movies by genre (from the movie card buttons) and append \"movies\" to the genre\n  const handleGenreClick = (genre) => {\n    setSelectedGenre(genre);\n    setDisplayedGenres((prev) => ({\n      ...prev,\n      [genre]: true\n    }));\n    const results = movies.filter(movie => movie.genre === genre);\n    setFilteredMovies(results);\n  };\n\n  const redirectToMovieInfo = (id) => {\n    navigate(`/movie/${id}`);\n  };\n\n  return (\n    <Layout>\n      <h1>Search Movies</h1>\n      \n      {/* Search Form */}\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          placeholder=\"Search by title, director, or year...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {/* Movie List */}\n      <div>\n        {filteredMovies.length > 0 ? (\n          <ul>\n            {filteredMovies.map(movie => (\n              <li key={movie.id} style={{ cursor: 'pointer' }}>\n                <h3>{movie.title}</h3>\n                <p>Director: {movie.director}</p>\n                <p>Year: {movie.year}</p>\n                <div>\n                  <button \n                    onClick={() => handleGenreClick(movie.genre)} \n                    style={{ padding: '10px', cursor: 'pointer', backgroundColor: movie.genre === selectedGenre ? 'lightblue' : 'white' }}\n                  >\n                    {displayedGenres[movie.genre] ? `${movie.genre} movies` : movie.genre}\n                  </button>\n                </div>\n                <img src={movie.poster} alt={movie.title} style={{ width: '150px', marginTop: '10px' }} />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No movies found.</p>\n        )}\n      </div>\n    </Layout>\n  );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}